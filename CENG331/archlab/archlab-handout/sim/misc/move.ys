#Ali Åžen 2264661

# Execution begins at address 0 
.pos 0 
	irmovq stack, %rsp  	# Set up stack pointer  
	irmovq src, %rdi		# Set parameter	src to %rdi
	irmovq dest, %rsi		# Set parameter	dest to %r10
	irmovq $3, %rdx 		# set len=3
	irmovq $8, %r8          # mov r10 to the next address
	irmovq $-1, %r9          # mov r10 to the next address
	call copy_block 		# call copy_block
	halt					# Terminate program 

# an array of 9 elements
# again, positioned absolutely
.pos 0x100
array:
.quad 0x000000001
.quad 0x000000020
.quad 0x000000300
# a pointer to the fourth element here
arrayp3:
.quad 0x000004000
.quad 0x000050000
.quad 0x000600000
.quad 0x007000000
.quad 0x080000000
.quad 0x900000000

copy_block:
	xorq %rax, %rax			# set result to 0
	jmp test

loop:
	
	mrmovq (%rdi), %r10 	    # mov current node's value to a variable(r9)
	rmmovq %r10,(%rsi)		# mov varibales value to dest
	xorq  %r10,%rax 		# xor rdi and rax then write the result to res
	addq %r8 , %rsi
	addq %r8 , %rdi
	addq %r9, %rdx			#len--

test:
	andq %rdx, %rdx 		# test loop variable
	jne loop 				# return loop if it's not null
	ret 		


# The stack starts here and grows to lower addresses
	.pos 0x100		
stack:	 
